0. Frame

self.frame_os = ctk.CTkFrame(self.master, width = 400, height = 500)
            self.frame_os_abertas.grid_columnconfigure(0, weight=1)
            self.frame_os_abertas.grid(row = 0,  column = 0, pady = 30)
            
0.1. scroll_frame
self.scroll_frame = ctk.CTkScrollableFrame(self.frame_os_abertas, width = 715, height = 300)
            self.scroll_frame.grid(row = 1, column = 0, padx= 5, pady =5)

###             widgets         ###

1. Label

self.lbtitle = ctk.CTkLabel(master = self.frame_os, text = 'Ordem de Serviço', font = ('Roboto', 14))
self.lbtitle.grid(row = 0, column = 0, padx = 10, pady = 10)     


2. Botão

self.btn_os = ctk.CTkButton(master = self.frame_os, text= 'Criar ordem de serviço', width = 300, font=('Roboto', 12), corner_radius= 20, command = self.cria_os)                           
self.btn_os.grid(row = 2, column = 0, padx = 10, pady = 10)


3. Entrada de dados
 self.cliente_os_entry = ctk.CTkEntry(master = self.frame_cria_os, placeholder_text= '', width = 250, font=('Roboto', 12),corner_radius=15)
        self.cliente_os_entry.grid(row = 1, column = 1, padx = 5, pady = 10)


4. CTkComboBox

self.situacao_os_entry = ctk.CTkComboBox(master=self.frame_cria_os, values=["Aberta", "Fechada"], width=250, font=('Roboto', 12), corner_radius=12)


5. Tabela

table = CTkTable(master= self.scroll_frame, values=os_abertas, height=30, width=40)



def conectar_eventos_entrada(self):
    self.cliente_os_entry.bind("<KeyRelease>", lambda event: self.preencher_automatico(self.cliente_os_entry))
    self.veiculo_os_entry.bind("<KeyRelease>", lambda event: self.preencher_automatico(self.veiculo_os_entry))
    self.motorista_os_entry.bind("<KeyRelease>", lambda event: self.preencher_automatico(self.motorista_os_entry))

def preencher_automatico(self, entry):
    texto_digitado = entry.get()
    # Lógica para buscar dados no banco de dados com base no texto digitado
    dados_encontrados = self.backend.buscar_dados(texto_digitado)
    if dados_encontrados:
        # Atualize o campo de entrada automaticamente com os dados encontrados
        entry.delete(0, END)
        entry.insert(0, dados_encontrados['nome'])  # Por exemplo, você pode esco



    def cadastrar_veiculo(self, modelo, placa, ano):
        modelo = (modelo.get())
        placa = (placa.get())
        ano = (ano.get())

        # Adicionar placa+modelo junto no database
        placa_veiculo =  placa + '-' + modelo
        placa_veiculo = placa_veiculo.strip()

        if(modelo == '' or placa == ''):
            messagebox.showerror(message='Preencha o modelo e a placa.')
        else:
            self.backend.cadastrar_veiculo_db(modelo, placa, ano, placa_veiculo)


        self.btn_cadastrar = ctk.CTkButton(master =self.frame_cadastro_veiculo, text= 'Cadastrar', width = 125, font=('Roboto', 12), corner_radius= 20, fg_color = 'gray', command = lambda: self.cadastrar_veiculo(self.modelo_veiculo_entry, self.placa_veiculo_entry, self.placa_veiculo_entry))                       
        self.btn_cadastrar.grid(row = 4, column = 1, padx = 10, pady = 10)       
